// Auto-generated by sanitizeGeneratedFiles
export async function onRequest(context) {
const { request } = context;
const { method } = request;
if (method !== 'POST' && method !== 'PUT') {
return new Response('Method Not Allowed', { status: 405 });
}
try {
const data = await request.json();
const { userId, userData } = data;
const message = method === 'POST' ? 'User created' : 'User updated';
return new Response(JSON.stringify({ message, userId, userData }), {
headers: { 'Content-Type': 'application/json' },
});
} catch (error) {
return new Response('Internal Server Error', { status: 500 });
}
}

export async function onRequest(context) {
const { request } = context;
const { method } = request;
if (method !== 'POST') {
return new Response('Method Not Allowed', { status: 405 });
}
try {
const data = await request.json();
const { userId, action } = data;
const message = action === 'start' ? 'Subscription started' : 'Subscription canceled';
return new Response(JSON.stringify({ message, userId }), {
headers: { 'Content-Type': 'application/json' },
});
} catch (error) {
return new Response('Internal Server Error', { status: 500 });
}
}

export async function onRequest(context) {
const { method } = context.request;
if (method !== 'GET') {
return new Response('Method Not Allowed', { status: 405 });
}
try {
const templates = [
{ id: 1, name: 'Professional Template' },
{ id: 2, name: 'Creative Template' },
{ id: 3, name: 'Simple Template' },
];
return new Response(JSON.stringify({ templates }), {
headers: { 'Content-Type': 'application/json' },
});
} catch (error) {
return new Response('Internal Server Error', { status: 500 });
}
}